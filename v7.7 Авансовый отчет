Перем Сч71, Сч71_1, Сч71_2, Сч71_11, Сч71_22;
Перем НачальнаяДатаДокумента;
Перем Новый;
Перем СписокДействий;
Перем СтарКоррСчет;
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем НомерТекущейФормы;
//*******************************************************************************
// ПроверитьКонтрагентДоговор()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Проверяет, и если надо устанавливает соответствие контрагента и договора
//  в шапке и в табличной части.
//
Процедура ПроверитьКонтрагентДоговор()
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
	    Если (КоррСчет=СчетПоКоду("10.2")) или
			(КоррСчет=СчетПоКоду("10.12")) или
			(КоррСчет=СчетПоКоду("10.13")) или
			(КоррСчет=СчетПоКоду("41.2")) или
			(КоррСчет=СчетПоКоду("41.3")) или
			(КоррСчет=СчетПоКоду("44.2")) Тогда
		Иначе 
			Продолжить;
		КонецЕсли;
		Если КоррСчет=СчетПоКоду("44.2") Тогда
			Если Субконто1<>Сотрудник Тогда
				Субконто1 = Сотрудник;
			КонецЕсли;
			Если Субконто2<>Договор Тогда
				Субконто2 = Договор;
			КонецЕсли;
		Иначе
			Если Субконто2<>Сотрудник Тогда
				Субконто2 = Сотрудник;
			КонецЕсли;
			Если Субконто3<>Договор Тогда
				Субконто3 = Договор;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры //ПроверитьКонтрагентДоговор()

//*****************************************************************************   
// ПриВыбореДоговора()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Договор"
// 
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореДоговора()

	глПриВыбореДоговора(Сотрудник, Договор);
	ПроверитьКонтрагентДоговор();
	
КонецПроцедуры // ПриВыбореДоговора()

//*****************************************************************************
// ПриВыбореКонтрагента()
//
// Вызывается из формул элементов диалога:
//  Поле ввода "Контрагент".
//
// Описание:
//  Проверяет соответствие договора выбранному контрагенту.
//
Процедура ПриВыбореКонтрагента()
	
	глПриВыбореКонтрагента(Сотрудник, Договор);
	ПроверитьКонтрагентДоговор();
	
КонецПроцедуры // ПриВыбореКонтрагента()

//*****************************************************************************
Процедура Пересчет(ИмяРеквизита="")
	Если ИмяРеквизита = "" Тогда // вызов из формулы колонки табличной части
	    ИмяРеквизита = Форма.ТекущаяКолонка();
	КонецЕсли;
	Если ИмяРеквизита = "СуммаПоОтчету" Тогда
		Сумма=СуммаПоОтчету;
	КонецЕсли;
	Если СтавкаНДС.Выбран()=1 Тогда
		НДС = (Сумма*СтавкаНДС.Ставка/100)/(1+СтавкаНДС.Ставка/100);
	ИначеЕсли (ИмяРеквизита = "СтавкаНДС") Тогда
		НДС = 0;
	КонецЕсли;
КонецПроцедуры //Пересчет 

//******************************************************************************
// УправлениеРеквизитомОсновноеСредство()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Нет.
//
// Описание:
//  Здесь описывается процедура.
//
Процедура УправлениеРеквизитомОсновноеСредство()
	
	Если (Субконто3 <> Перечисление.ВидыРасчетовСПоставщиками.РасходыНаПриобретениеОС) и
	(КоррСчет <> СчетПоКоду("10.1")) и
	(КоррСчет <> СчетПоКоду("10.2")) и
	(КоррСчет <> СчетПоКоду("10.3")) и
	(КоррСчет.ПринадлежитГруппе(СчетПоКоду("41")) = 0) и
	(КоррСчет.ПринадлежитГруппе(СчетПоКоду("08")) = 0) Тогда
		Форма.ОсновноеСредство.Доступность(0);
		ОсновноеСредство = "";
	Иначе
		Форма.ОсновноеСредство.Доступность(1);
	КонецЕсли;
	
КонецПроцедуры // УправлениеРеквизитомОсновноеСредство()

//_____________________________________________________________________________
Процедура ПриУстановкеТипаОтчета()
	Если ТипОтчета = 2 Тогда
		Форма.Валюта.Видимость(1);
		Форма.КурсВал.Видимость(1);
		Форма.РамкаВалюты.Видимость(1);
		Если Валюта.Выбран() = 0 Тогда
			Валюта = глЗначениеПоУмолчанию("ОсновнаяВалюта");
		КонецЕсли;
		Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
			Сч71 = Сч71_22;
		Иначе
			Сч71 = Сч71_11;
		КонецЕсли;
		
	Иначе
		Если Валюта.Выбран() = 1 Тогда
			Валюта = "";
		КонецЕсли;
		Форма.Валюта.Видимость(0);
		Форма.КурсВал.Видимость(0);
		Форма.РамкаВалюты.Видимость(0);
		Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.ДоходыМинусРасходы Тогда
			Сч71 = Сч71_2;
		Иначе
			Сч71 = Сч71_1;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Функция ПоказатьКурс()
	Перем Стр;

	Если Валюта.Выбран() = 1 Тогда
		Стр = Валюта.Курс.Получить(ДатаДок);
	Иначе
		Стр = "";
	КонецЕсли;

	Возврат Стр;
КонецФункции //ПоказатьКурс
//_____________________________________________________________________________
Процедура РасчитатьПредыдущийОстаток()
	Если ДатаДок > КонецРассчитанногоПериодаБИ() Тогда
		Предупреждение("На " + ДатаДок + " бухгалтерские итоги не рассчитаны!
						|Расчет итогов выполняется в режиме
						|""Операции - Управление бухгалтерскими итогами"".");
		
	ИначеЕсли (Выбран() = 0) или ((Выбран() = 1) и (ДатаДок <> ТекущийДокумент().ДатаДок)) Тогда
		Предупреждение("Для получения остатка предыдущего аванса по данным
						|бухгалтерского учета документ необходимо записать."); 
		
	Иначе
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт.ИспользоватьСубконто(ВидыСубконто.Контрагенты,Сотрудник,2);
		Если ТипОтчета = 1 Тогда
			БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"71.1, 71.2");
			ОстатокПоСчету = БухИт.СНД("С") - БухИт.СНК("С");
		Иначе
			БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,"71.11, 71.22",,Валюта);
			ОстатокПоСчету = БухИт.СНД("В") - БухИт.СНК("В");
		КонецЕсли;
		ОстатокПоСчету = ОстатокПоСчету - Сумма1 - Сумма2 - Сумма3;
		Если ОстатокПоСчету < 0 Тогда
			ТипОстатка = 2; //Перерасход
			ПредОстаток = - ОстатокПоСчету;
		Иначе
			ТипОстатка = 1; //Остаток
			ПредОстаток = ОстатокПоСчету;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //РасчитатьПредыдущийОстаток
//_____________________________________________________________________________
Функция РасчетОстатка()
	Ост = Сумма1 + Сумма2 + Сумма3;
    Ост = Ост - Итог("Сумма");

	Если ТипОстатка = 1 Тогда //остаток
		Ост = Ост + ПредОстаток;
	Иначе //перерасход
		Ост = Ост - ПредОстаток;
	КонецЕсли;
	Возврат Ост;
КонецФункции  //РасчетОстатка 
//_____________________________________________________________________________
Процедура УправлениеРеквизитомНДС()
		РасчетыСКонтрагентами = ?(Найти("60.1,60.2,60.3,60.11,60.22,71.1,76.5,76.6,76.55,76.66",Строка(СокрЛП(КоррСчет.Код))) <> 0,0,1);
		Форма.СтавкаНДС.Доступность(РасчетыСКонтрагентами);
		Форма.НДС.Доступность(РасчетыСКонтрагентами);
		СтавкаНДС = ?(РасчетыСКонтрагентами = 0,"",СтавкаНДС);
		НДС = ?(РасчетыСКонтрагентами = 0,0,НДС);
		УчетРасходовДляНУ = ?(РасчетыСКонтрагентами = 0,Перечисление.ВариантыУчетаРасходовДляНУ.НеПринимаются,УчетРасходовДляНУ);
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВыбореСчета()
    Перем СтрСообщения;
	
	Метод = Константа.УчитыватьАктивыВВалюте.Получить(ДатаДок);
	
	НазначитьТип("Субконто1", КоррСчет.ВидСубконто(1));
	НазначитьТип("Субконто2", КоррСчет.ВидСубконто(2));
	НазначитьТип("Субконто3", КоррСчет.ВидСубконто(3));
	Если КоррСчет=СчетПоКоду("44.2") Тогда
		Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.Доходы Тогда
			Предупреждение("По объекту налогообложения ""Доходы""
						  |расходы на доставку товаров следует учитывать 
						  |по дебету субсчета ""44.1""");
			КоррСчет = СтарКоррСчет;
			Возврат;
		КонецЕсли;	
		УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются;

		Субконто1	= Сотрудник;
		Субконто2	= Договор;                                                      
	ИначеЕсли КоррСчет=СчетПоКоду("41.2") Тогда
		Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.Доходы Тогда
			Предупреждение("По объекту налогообложения ""Доходы"""+РазделительСтрок
						+"товары следует учитывать по дебету субсчета ""41.1""");
			КоррСчет = СтарКоррСчет;
			Возврат;
		КонецЕсли;
		УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются;

		Субконто2	= Сотрудник;
		Субконто3	= Договор;   
	
	ИначеЕсли КоррСчет=СчетПоКоду("10.12") Тогда
		Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.Доходы Тогда
			Предупреждение("По объекту налогообложения ""Доходы"""+РазделительСтрок
						+"ТЗР следует учитывать по дебету субсчета ""10.11""");
			КоррСчет = СтарКоррСчет;
			Возврат;
		КонецЕсли;	
		
		УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются;

		Субконто2	= Сотрудник;
		Субконто3	= Договор;
	
	ИначеЕсли КоррСчет=СчетПоКоду("10.2") Тогда
		Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.Доходы Тогда
			Предупреждение("По объекту налогообложения ""Доходы"""+РазделительСтрок
						+"материалы следует учитывать по дебету субсчета ""10.1""");
			КоррСчет = СтарКоррСчет;
			Возврат;
		КонецЕсли;
		
		УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются;

		Субконто2	= Сотрудник;
		Субконто3	= Договор;
	
	ИначеЕсли (КоррСчет=СчетПоКоду("10.11")) ИЛИ (КоррСчет=СчетПоКоду("10.1"))
			ИЛИ (КоррСчет=СчетПоКоду("44.1")) ИЛИ (КоррСчет=СчетПоКоду("41.1")) Тогда
		УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.НеПринимаются;
	ИначеЕсли КоррСчет.ПринадлежитГруппе(СчетПоКоду("97")) = 1 Тогда
		Если КоррСчет = СчетПоКоду("97.1") Тогда
			УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.НеПринимаются;
		ИначеЕсли КоррСчет = СчетПоКоду("97.2") Тогда
			Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.Доходы Тогда
				Предупреждение("По объекту налогообложения ""Доходы"" 
					|РБП следует отражать по дебету субсчета 97.1");
				КоррСчет = СтарКоррСчет;
				Возврат;
			КонецЕсли;
			
			УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются;
		КонецЕсли;			
		
		//Если ПустоеЗначение(СтрСообщения) = 0 Тогда
		//	Предупреждение(СтрСообщения);
		//КонецЕсли;					
	Иначе	
		Если Константа.ОбъектНалогообложения.Получить(ДатаДок) = Перечисление.ВариантОбъектаНалогообложения.Доходы Тогда
			УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.НеПринимаются;
		Иначе	
			УчетРасходовДляНУ = Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются;
		КонецЕсли;	
	КонецЕсли;      
    
	Если (КоррСчет.Валютный = 1) Тогда
	    Предупреждение("Корреспондирующий счет не может быть валютным.");
		КоррСчет = СтарКоррСчет;
		Возврат;
	КонецЕсли;
	
	глПроверкаКорректныхПроводок(КоррСчет,Сч71);
	
	Форма.Количество.Доступность(КоррСчет.Количественный);
	Если КоррСчет.Количественный = 0 Тогда
		Количество = 0;
	КонецЕсли;
	
	УправлениеРеквизитомОсновноеСредство();
	УправлениеРеквизитомНДС();
КонецПроцедуры

//******************************************************************************
// ПриВыбореСубконто()
//
// Параметры:
//  Нет.
//
// Вызывается из формул элементов диалога:
//  Субконто1, Субконто2, Субконто3.
//
// Описание:
//  Проверяется соотвествие контрагента и договора, указанного в аналитике.
//
Процедура ПриВыбореСубконто()
	
	ИдентификаторРеквизита = Форма.ТекущаяКолонка();
	ЗначениеРеквизита = ПолучитьАтрибут(ИдентификаторРеквизита);
	НомерСубконто = Число(Прав(ИдентификаторРеквизита, 1));
	Если ТипЗначенияСтр(ЗначениеРеквизита) = "Справочник" Тогда
		Если ЗначениеРеквизита.Вид() = "Контрагенты" Тогда
			Если НомерСубконто < 3 Тогда
				ИдентификаторСледующегоРеквизита = Лев(ИдентификаторРеквизита, СтрДлина(ИдентификаторРеквизита)-1) + (НомерСубконто + 1);
				ЗначениеСледующегоРеквизита = ПолучитьАтрибут(ИдентификаторСледующегоРеквизита);
				Если ТипЗначенияСтр(ЗначениеСледующегоРеквизита) = "Справочник" Тогда
					Если ЗначениеСледующегоРеквизита.Вид() = "Договоры" Тогда
						Если ЗначениеРеквизита <> ЗначениеСледующегоРеквизита.Владелец Тогда
						    УстановитьАтрибут(ИдентификаторСледующегоРеквизита, ЗначениеРеквизита.ОсновнойДоговор);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ЗначениеРеквизита.Вид() = "Договоры" Тогда
			Если (ПустоеЗначение(ЗначениеРеквизита) = 0) и (НомерСубконто > 1) Тогда
				ИдентификаторПредыдущегоРеквизита = Лев(ИдентификаторРеквизита, СтрДлина(ИдентификаторРеквизита)-1) + (НомерСубконто - 1);
				ЗначениеПредыдущегоРеквизита = ПолучитьАтрибут(ИдентификаторПредыдущегоРеквизита);
				Если ТипЗначенияСтр(ЗначениеПредыдущегоРеквизита) = "Справочник" Тогда
					Если ЗначениеПредыдущегоРеквизита.Вид() = "Контрагенты" Тогда
						Если ЗначениеРеквизита.Владелец <> ЗначениеПредыдущегоРеквизита Тогда
						    УстановитьАтрибут(ИдентификаторПредыдущегоРеквизита, ЗначениеРеквизита.Владелец);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ЗначениеРеквизита.Вид() = "Номенклатура" Тогда
			СтавкаНДС = Субконто1.СтавкаНДС;
			НДС = (Сумма*СтавкаНДС.Ставка/100)/(1+СтавкаНДС.Ставка/100);
		КонецЕсли;

	КонецЕсли;
	УправлениеРеквизитомОсновноеСредство();
	
КонецПроцедуры // ПриВыбореСубконто()
//*******************************************
Функция ТабельныйНомер(Контрагент)
	Спр = СоздатьОбъект("Справочник.Сотрудники");
	Если Спр.НайтиПоНаименованию(Контрагент.Наименование,0)=1 Тогда
	    Возврат Спр.ТекущийЭлемент().Код;
	КонецЕсли;
	Спр.ВыбратьЭлементы();
	Пока Спр.ПолучитьЭлемент()=1 Цикл
		Если Спр.Наименование = Контрагент.ПолнНаименование Тогда
		    Возврат Спр.ТекущийЭлемент().Код;
		КонецЕсли;
		ФамилияС = Лев(СокрЛП(Спр.Наименование),Найти(СокрЛП(Спр.Наименование)," "));
		Если ФамилияС = "" Тогда
			ФамилияС = СокрЛП(Спр.Наименование);
			ИнИмениС = "";
		Иначе
			ИнИмениС = Сред(СокрЛП(Спр.Наименование),Найти(СокрЛП(Спр.Наименование)," ")+1,1);
		КонецЕсли;
		ФамилияК = Лев(СокрЛП(Контрагент.Наименование),Найти(СокрЛП(Контрагент.Наименование)," "));
		Если ФамилияК = "" Тогда
			ФамилияК = СокрЛП(Контрагент.Наименование);
			ИнИмениК = "";
		Иначе
			ИнИмениК = Сред(СокрЛП(Контрагент.Наименование),Найти(СокрЛП(Контрагент.Наименование)," ")+1,1);
		КонецЕсли;
		Если Врег(ФамилияС+ИнИмениС)=Врег(ФамилияК+ИнИмениК) Тогда
			Возврат Спр.ТекущийЭлемент().Код;
		КонецЕсли;
	КонецЦикла;
	Возврат "";
КонецФункции
//*****************************************************************************
// Печать()
//
// Вызывается из формул элементов диалога:
//  Кнопка "Печать".
//
// Описание:
//  Формирует печатную форму авансового отчета. До 01.01.2002 - форму 807,
// после - типовую форму АО-1.
//
Процедура Печать()

	
	Если Валюта.Выбран() = 1 Тогда
	    Курс = Валюта.Курс.Получить(ДатаДок);
		Кратность = Валюта.Кратность.Получить(ДатаДок);
		Кратность = ?(Кратность = 0, 1, Кратность);
	Иначе
		Курс = 1;
		Кратность = 1;
	КонецЕсли;
	
	// Расчет значений для печати формы АО-1.
	Израсходовано = Окр(Итог("Сумма")*Курс/Кратность, 2, 1);
	ИзрасходованоПрописью = Формат(Израсходовано,"ЧПДС")+
							" ("+Цел(Израсходовано)+
							" руб. "+
							Формат((Израсходовано-Цел(Израсходовано))*100,"Ч(0)2")+
							" коп.)";
	Если ТипОстатка = 1 Тогда
		НачальныйОстаток = Окр(ПредОстаток*Курс/Кратность, 2, 1);
		НачальныйПерерасход = 0;
	Иначе
		НачальныйОстаток = 0;
		НачальныйПерерасход = Окр(ПредОстаток*Курс/Кратность, 2, 1);
	КонецЕсли;
	СуммаРуб1 = Окр(Сумма1*Курс/Кратность, 2, 1);
	СуммаРуб1Вал = ?(Валюта.Выбран() = 1, СуммаРуб1, 0);
	СуммаВал1 = ?(Валюта.Выбран() = 1, СокрЛ(Формат(Сумма1, "Ч015.2-")) + " "+Валюта, "");
	СуммаРуб2 = Окр(Сумма2*Курс/Кратность, 2, 1);
	СуммаРуб3 = Окр(Сумма3*Курс/Кратность, 2, 1);
	ИтогоПолучено = СуммаРуб1 + СуммаРуб2 + СуммаРуб3;
	КонечныйОстаток = НачальныйОстаток - НачальныйПерерасход + ИтогоПолучено - Израсходовано;
	Если КонечныйОстаток < 0 Тогда
		КонечныйПерерасход = - КонечныйОстаток;
	    КонечныйОстаток = 0;
	КонецЕсли;
	ТекстРасписки = "Принят к проверке от  _____________________________  авансовый отчет № "+
					глПреобразоватьНомерДок(НомерДок, 0, 0)+
					" от "+Формат(ДатаДок,"Д (0)ДДММММГГГГ")+РазделительСтрок+
					"на сумму "+Формат(Израсходовано,"ЧПДС")+", количество документов "+
					ПриложеноДок+" на  "+НаЛистах+"  листах";
	
	// Печать заголовка формы АО-1.
	Таб=СоздатьОбъект("Таблица");
	ИмяФайлаПечатнойФормы = КаталогИБ()+"ExtForms\PrnForms\1cbava.mxl";
	Если ФС.СуществуетФайл(ИмяФайлаПечатнойФормы) = 1 Тогда
		Таб.ИсходнаяТаблица(ИмяФайлаПечатнойФормы);
	Иначе
		Таб.ИсходнаяТаблица("Таблица");
	КонецЕсли;
	ТабНомер = ТабельныйНомер(Сотрудник);
	Таб.ВывестиСекцию("Заголовок");
	
	// Печать курсовой разницы.
	НомерСтрокиТаблицы = 1;
	Если ТипОтчета = 2 Тогда
		БухИт = СоздатьОбъект("БухгалтерскиеИтоги");
		БухИт.ИспользоватьСубконто(ВидыСубконто.Сотрудники,Сотрудник,2);
		БухИт.ВыполнитьЗапрос(ТекущийДокумент(),,Сч71,,Валюта);
		РублевыйОстаток = БухИт.СНД("С") - БухИт.СНК("С");
		ВалютныйОстаток = БухИт.СНД("В") - БухИт.СНК("В");
		НовыйРублевыйОстаток = Окр(ВалютныйОстаток*Курс/Кратность,2,1);
		КурсоваяРазница = НовыйРублевыйОстаток - РублевыйОстаток;
		
		Если КурсоваяРазница <> 0 Тогда
			Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
			Таб.ПрисоединитьСекцию("КурсоваяРазница|Таблица");
			НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
		КонецЕсли;
	КонецЕсли;
	
	// Печать бух. записи по кредиту 71.
	Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
	Таб.ПрисоединитьСекцию("Израсходовано|Таблица");
	НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
	
	// Печать бух. записей, сгруппированным  по счетам затрат для
	// формы АО-1.
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Сформировать)
	|Период с (ТекущийДокумент()) по (ТекущийДокумент());
	|ОбрабатыватьДокументы все;
	|КоррСчет = Документ.АвансовыйОтчет.КоррСчет;
	|Сумма = Документ.АвансовыйОтчет.Сумма;
	|Функция ИтогоПоСчету = Сумма(Сумма);
	|Группировка КоррСчет Без Групп;
	|Условие (Сумма <> 0);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблРасходов = СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТаблРасходов, "КоррСчет, Сумма");
	ТаблРасходов.Свернуть("КоррСчет", "Сумма");
	
	ВсегоСекций = 8;
	Флаг = 1; // если 0, то таблица бух. записей превысила допустимые 8 строк
	ТаблРасходов.ВыбратьСтроки();
	Пока (ТаблРасходов.ПолучитьСтроку() = 1) И (Флаг = 1) Цикл
		Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
		ПоСчетуСумма = Окр(ТаблРасходов.Сумма*Курс/Кратность,2,1);
		Таб.ПрисоединитьСекцию("НеПустаяСтрока|Таблица");
		НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
		
		Если НомерСтрокиТаблицы > ВсегоСекций Тогда
			Флаг = 0;
		КонецЕсли;
	КонецЦикла;
	
	// Печать оставшихся секций.
	Пока НомерСтрокиТаблицы <= ВсегоСекций Цикл
		Таб.ВывестиСекцию("Секция_"+НомерСтрокиТаблицы+"|ДоТаблицы");
		Таб.ПрисоединитьСекцию("ПустаяСтрока|Таблица");
		НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
	КонецЦикла;
	
	ПредставлениеГода = Лев(ДатаГод(ДатаДок),3);
	Таб.ВывестиСекцию("ПослеТаблицы");
	Таб.НоваяСтраница();
	
	// Печать табличной части.
	Таб.ВывестиСекцию("Шапка");
	
    СуммаСтрок = 0;
	СуммаСтрокПоОтчету = 0;
	
	СуммаСтрокиВал = 0;
	СуммаСтрокиПоОтчетуВал = 0;
	СуммаСтрокВал = 0;
	СуммаСтрокПоОтчетуВал = 0;
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку() = 1 Цикл
		СуммаСтроки = Окр(Сумма*Курс/Кратность, 2, 1);
		СуммаСтрок = СуммаСтрок + СуммаСтроки;
		СуммаСтрокиПоОтчету = Окр(СуммаПоОтчету*Курс/Кратность, 2, 1);
		СуммаСтрокПоОтчету = СуммаСтрокПоОтчету + СуммаСтрокиПоОтчету;
		Если Валюта.Выбран() = 1 Тогда
		    СуммаСтрокиВал = Сумма;
			СуммаСтрокВал = СуммаСтрокВал + СуммаСтрокиВал;
			СуммаСтрокиПоОтчетуВал = СуммаПоОтчету;
			СуммаСтрокПоОтчетуВал = СуммаСтрокПоОтчетуВал + СуммаСтрокиПоОтчетуВал;
		КонецЕсли;
	    Таб.ВывестиСекцию("Строка");
	КонецЦикла;
	Таб.ВывестиСекцию("Подвал");
	Таб.Опции(0,0,0,0,"ОпцииПечатиАвансовогоОтчета","ПараметрыОкнаАвансовогоОтчета");
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Авансовый отчет","");
	
КонецПроцедуры // Печать()

//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Если  ПустоеЗначение(НомерТекущейФормы) = 1  Тогда
		НомерТекущейФормы = 1;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
	КонецЕсли;
	
	Если НомерТекущейФормы = 1  Тогда
		Печать();
	Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(глВзятьКонтекст(Контекст), "Контекст");
		Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
		Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");
		
		ОткрытьФорму("Отчет", Параметры, глКаталогПечФорм+ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы,"Файл"));
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// ПоКнопкеВыборПечатнойФормы()
//
// Параметры:
//  нет.    
//
// Возвращаемое значение:
//  нет.
//
// Описание:
//  - открывает список для выбора способа печати. 
//  - формирует таблицу по выбранному способу.
//
Процедура ПоКнопкеВыборПечатнойФормы()
	
    ВыбНомер = глВыборПечатнойФормы("Документ." + Вид(), ТаблицаПечФорм);
	Если ВыбНомер > 0 Тогда
		НомерТекущейФормы = ВыбНомер;
		Форма.кнПечать.Заголовок(ТаблицаПечФорм.ПолучитьЗначение(НомерТекущейФормы, "Кнопка"));
		ПоКнопкеПечать();
	КонецЕсли;

КонецПроцедуры // ПоКнопкеВыборПечатнойФормы()

//*****************************************************************************
// Предопределенная процедура
//_____________________________________________________________________________
Процедура ВводНового(Копирование);
	
	Новый = 1;
	Если Копирование = 1 Тогда
	    Возврат;
	КонецЕсли;

	ТипОтчета = 1;
	ТипОстатка = 1;
	Получено1 = "из кассы";
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриОткрытии()
	ПриЗаписиПерепроводить(1);
	глПроверкаРазрешенияРедактирования(Контекст);
	Если Форма.ТолькоПросмотр() = 1 Тогда
		Форма.КнопкаЗаписать.Доступность(0);
		Форма.КнопкаОК.Доступность(0);
		Форма.КнопкаПоказать.Доступность(0);
	КонецЕсли;
    
	// Заполним таблицу для выбора печатной формы
	НомерТекущейФормы = глУстановкаКнопкиПечать(Контекст, "Документ." + Вид(),ТаблицаПечФорм);

	Сч71_1 = СчетПоКоду("71.1");
	Сч71_2 = СчетПоКоду("71.2");
	Сч71_11 = СчетПоКоду("71.11");
	Сч71_22 = СчетПоКоду("71.22");
	Форма.КоррСчет.ВыборГруппы(0);
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение(1,"Лицевая сторона");
	Форма.Закладки.ДобавитьЗначение(2,"Оборотная сторона");
	Форма.ИспользоватьСлой("Основной, Шапка",2);
	ТипОтчета = Валюта.Выбран() + 1;
	ПриУстановкеТипаОтчета();

	НачальнаяДатаДокумента = ДатаДок;
	
	Форма.СуммаПоОтчету.ВыполнятьФормулуТолькоПриИзменении(1);
	
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки = 1 Тогда
		Форма.ИспользоватьСлой("Основной, Шапка",2);
		ПриУстановкеТипаОтчета();
	Иначе
		Форма.ИспользоватьСлой("Основной, Таблица",2);
		Форма.Валюта.Видимость(0);
		Форма.КурсВал.Видимость(0);
		Форма.РамкаВалюты.Видимость(0);
	КонецЕсли;

		
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриНачалеВыбораЗначения(ИдентЭлемДиалога, ФлагСтандОбр) //предопределенная
	Если ИдентЭлемДиалога = "КоррСчет" Тогда
		СтарКоррСчет = КоррСчет;
		СписокКорректныхПроводок = СоздатьОбъект("СписокЗначений");
		Если ТипОтчета = 2 Тогда
		    Сч71 = Сч71_11;
		Иначе
		    Сч71 = Сч71_2;
		КонецЕсли;
	    СписокКорректныхПроводок.Установить("Счет", Сч71);
	    СписокКорректныхПроводок.Установить("Корреспонденция", 0);//кредитовый счет
		глЗначениеОтбора = СписокКорректныхПроводок;
		
	ИначеЕсли ИдентЭлемДиалога = "ОсновноеСредство" Тогда
		Если (КоррСчет.Родитель(1)= СчетПоКоду("10")) Или (КоррСчет.Родитель(1)= СчетПоКоду("41"))  Тогда 
			ОсновноеСредство.ВидыДляВыбора("МестаХранения");	
		Иначе
			ОсновноеСредство.ВидыДляВыбора("ОбъектыВнеоборотныхАктивов,ОсновныеСредства"+?(ДатаДок >= '01.01.2006',",НематериальныеАктивы",""));
		КонецЕсли;
				
    ИначеЕсли ИдентЭлемДиалога = "Сотрудник" Тогда
		ОткрытьФорму("Справочник.Сотрудники.ФормаСписка","Авансовый отчет");
		ФлагСтандОбр=0;
		
	ИначеЕсли ИдентЭлемДиалога = "УчетРасходовДляНУ" Тогда
		Если ПустоеЗначение(КоррСчет)=0 Тогда
			СтрПр = "";
			Если (КоррСчет = СчетПоКоду("10.11")) 
				ИЛИ (КоррСчет = СчетПоКоду("10.1"))
				ИЛИ (КоррСчет = СчетПоКоду("44.1"))
				ИЛИ (КоррСчет = СчетПоКоду("41.1"))
				ИЛИ (КоррСчет = СчетПоКоду("97.1")) 
				ИЛИ (Найти("60.1,60.2,60.3,60.11,60.22,71.1,76.5,76.6,76.55,76.66",Строка(СокрЛП(КоррСчет.Код))) <> 0) тогда
					
				СтрПр = "Для выбранного счета затрат, значение реквизита 
						|""Вариант учета расходов в налоговом учете"""+РазделительСтрок
						+"может быть только ""Не принимаются""";
				УчетРасходовДляНУ=Перечисление.ВариантыУчетаРасходовДляНУ.НеПринимаются;
				ФлагСтандОбр=0;	
			ИначеЕсли (КоррСчет = СчетПоКоду("10.12"))
				ИЛИ (КоррСчет = СчетПоКоду("10.2"))
				ИЛИ (КоррСчет = СчетПоКоду("10.3"))
				ИЛИ (КоррСчет = СчетПоКоду("10.13"))
				ИЛИ (КоррСчет = СчетПоКоду("44.2"))
				ИЛИ (КоррСчет = СчетПоКоду("41.2"))
				ИЛИ (КоррСчет = СчетПоКоду("41.3")) Тогда
					           
				СтрПр = "Для выбранного счета затрат, значение реквизита 
						|""Вариант учета расходов в налоговом учете"""+РазделительСтрок
						+"может быть только ""Принимаются""";
				УчетРасходовДляНУ=Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются;
				ФлагСтандОбр=0;	
			ИначеЕсли (КоррСчет = СчетПоКоду("97.2"))
				ИЛИ (КоррСчет = СчетПоКоду("97.4")) Тогда
				
				УчетРасходовДляНУ = ?(УчетРасходовДляНУ.ПорядковыйНомер() = 3,Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются,
									Перечисление.ВариантыУчетаРасходовДляНУ.Распределяются);
				ФлагСтандОбр=0;	
			Иначе
				//УчетРасходовДляНУ = ?(УчетРасходовДляНУ.ПорядковыйНомер() = 3,Перечисление.ВариантыУчетаРасходовДляНУ.Принимаются,
				//					Перечисление.ВариантыУчетаРасходовДляНУ.ЗначениеПоНомеру(УчетРасходовДляНУ.ПорядковыйНомер()+1));
				ФлагСтандОбр = 1;						
			КонецЕсли;
			
			Если ПустоеЗначение(СтрПр)=0 тогда
				Предупреждение(СтрПр);	
			КонецЕсли;	
		Иначе	
			ФлагСтандОбр = 0;						
		КонецЕсли;	
	
	КонецЕсли;
КонецПроцедуры //ПриНачалеВыбораЗначения
//_____________________________________________________________________________
Процедура ПриНачалеРедактированияСтроки()
	
	 УправлениеРеквизитомОсновноеСредство();
	 Если КоррСчет.Выбран()=1 Тогда
	 	Форма.Количество.Доступность(КоррСчет.Количественный);
	 	Если КоррСчет.Количественный = 0 Тогда
	 		Количество = 0;
	 	КонецЕсли;
	 	УправлениеРеквизитомНДС();
	 КонецЕсли;
КонецПроцедуры
//_____________________________________________________________________________
Процедура ПриРедактированииНовойСтроки() 
	
	Форма.ОсновноеСредство.Доступность(0);
	Форма.Количество.Доступность(0);

	Если (Константа.ОсновнаяСтавкаНДС.Выбран()=1) и (Форма.НДС.Доступность() = 1) Тогда
		СтавкаНДС = Константа.ОсновнаяСтавкаНДС;
	КонецЕсли;
	
КонецПроцедуры
//_____________________________________________________________________________

Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст) = 0 Тогда
		СтатусВозврата(0);
		Возврат;
	ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента) = 1 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;


	Если ТипОтчета = 1 Тогда
		Валюта = "";
		Операция.СуммаОперации = Итог("Сумма");
		
	Иначе
		Если Валюта.Выбран() = 1 Тогда
			Курс = Валюта.Курс.Получить(ДатаДок);
			Кратность = Валюта.Кратность.Получить(ДатаДок);
			Кратность = ?(Кратность = 0, 1, Кратность);
		
		Иначе
			Курс = 1;
			Кратность = 1;
		КонецЕсли;
		Операция.СуммаОперации = Итог("Сумма")*Курс/Кратность;
	КонецЕсли;
	
	Операция.Содержание = "Авансовый отчет: "+Сотрудник;
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ПриЗакрытии()
	
	глОткрытьЖурнал(Контекст, Новый);	
	
КонецПроцедуры // ПриЗакрытии()

//*****************************************************************************
Новый = 0;

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Перейти  в журнал");

ТаблицаПечФорм		= СоздатьОбъект("ТаблицаЗначений");
ТаблицаПечФорм.НоваяКолонка("Название","Строка",,,,30);
ТаблицаПечФорм.НоваяКолонка("Файл","Строка",,,"Файл",10);
ТаблицаПечФорм.НоваяКолонка("Кнопка","Строка",,,,10); 
ТаблицаПечФорм.НоваяКолонка("ФайлОписания","Строка");
	
// добавим информацию о встроенной форме
ТаблицаПечФорм.НоваяСтрока();
ТаблицаПечФорм.Название     = "Авансовый отчет";
ТаблицаПечФорм.Кнопка       = "Печать";
